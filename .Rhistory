id = rownames(darl.df),
col = if_else(cluster== 1, "orange", "navy"))
# rescale the axes
b <- seq(-60,80, by = 20)
b2 <- seq(-60,60, by = 20)
#
# bp <- biplot(darl.PCA)
# text(x = .1, y = -.2, labels = "X",col = "blue")
# text(x= darl.PCA$scores[,1], darl.PCA$scores[,2], labels=rownames(darl.df), cex=1, lwd=2, col = "green")
# create the biplot
ggplot() +
geom_text(data = darl_PCA.df, aes(x = Comp.1, y = Comp.2,
color = cluster, label = id)) +
geom_segment(data = loading.df, aes(x = 0, y = 0,
xend = PC1*10,
yend = PC2*10),
arrow = arrow(length = unit(0.2,"cm"))) +
# rescale the x axis for a secondary axis for the loadings
scale_x_continuous(limits = c(range(b)/10),
sec.axis =sec_axis(~ . * 10,
name = "PC1-loading",
breaks = b,
labels = as.character(b/100))) +
# rescale the x axis for a secondary axis for the loadings
scale_y_continuous(limits = c(range(b2)/10),
sec.axis =sec_axis(~ . * 10,
name = "PC2-loading",
breaks = b2,
labels = as.character(b2/100))) +
geom_text(data = loading.df,
mapping = aes(x = PC1*10, y = 10*PC2, label = name)) +
theme_bw()
darl.kclust
darl.df %>% cbind(., darl.kclust$cluster) %>% as_tibble %>% summarise(.by = `darl.kclust$cluster`, avg_mouthd = mean(mouth_diam))
pairs(darl.df[,c(1,2,8,9)], panel = function(x,y,z) text(x,y, darl.kclust$cluster))
set.seed(11)
darl.MRPP <- mrpp(vegdist(darl.df, method = "euclidean"),
darl.kclust$cluster,
permutations = 1000)
# data of delta values
darl_delta <- data.frame(delta = c(darl.MRPP$boot.deltas, darl.MRPP$delta),
i = c(rep(0, length(darl.MRPP$boot.deltas)), 1))
# plot the histogram
ggplot(data = darl_delta, aes(x = delta)) +
geom_histogram(bins = 50) +
# line to denot location of observed value
geom_vline(xintercept = darl.MRPP$delta, color = "red") +
theme_bw() +
ggtitle("Darlington data MRPP deltas") +
labs(caption = str_wrap(paste0(
"Histogram of deltas from permutation test, red line ",
"denotes observed value. P-value of: <0.001")))
darl.MRPP$delta
darl.MRPP$E.delta
# Pitcher plant data
w <- getwd()
darl.df <- read.csv("Darlingtonia.csv", row.names = 1)
# dune data
dune.df <- read.csv("dune_data.csv", row.names = 1)
# read in the packages
invisible(lapply(c("cluster", "vegan", "pvclust", "tidyverse"),
require,
character.only = T))
# doing the data transformations:
darl.df <- darl.df %>%
# Apply the log10 transformations
mutate(across(.cols = c(tube_diam, keel_diam,
wing2_length,
hoodarea, wingarea,
tubearea), ~log10(.x))) %>%
# apply z-standardization
mutate(across(.cols = everything(), ~scale(.x)))
darl.df
# Pitcher plant data
w <- getwd()
darl.df <- read.csv("Darlingtonia.csv", row.names = 1)
# dune data
dune.df <- read.csv("dune_data.csv", row.names = 1)
# read in the packages
invisible(lapply(c("cluster", "vegan", "pvclust", "tidyverse"),
require,
character.only = T))
# doing the data transformations:
darl.df <- darl.df %>%
# Apply the log10 transformations
mutate(across(.cols = c(tube_diam, keel_diam,
wing2_length,
hoodarea, wingarea,
tubearea), ~log10(.x))) %>%
# apply z-standardization
mean(darl.df$mouth_diam) + sd(darl.df$mouth_diam)*c(0.570, -0.809)
mutate(across(.cols = everything(), ~scale(.x)))
# Pitcher plant data
w <- getwd()
darl.df <- read.csv("Darlingtonia.csv", row.names = 1)
# dune data
dune.df <- read.csv("dune_data.csv", row.names = 1)
# read in the packages
invisible(lapply(c("cluster", "vegan", "pvclust", "tidyverse"),
require,
character.only = T))
# doing the data transformations:
darl.df <- darl.df %>%
# Apply the log10 transformations
mutate(across(.cols = c(tube_diam, keel_diam,
wing2_length,
hoodarea, wingarea,
tubearea), ~log10(.x))) %>%
# apply z-standardization
mean(darl.df$mouth_diam) + sd(darl.df$mouth_diam)*c(0.570, -0.809)
mutate(across(.cols = everything(), ~scale(.x)))
# Pitcher plant data
w <- getwd()
darl.df <- read.csv("Darlingtonia.csv", row.names = 1)
# dune data
dune.df <- read.csv("dune_data.csv", row.names = 1)
# read in the packages
invisible(lapply(c("cluster", "vegan", "pvclust", "tidyverse"),
require,
character.only = T))
mean(darl.df$mouth_diam) + sd(darl.df$mouth_diam)*c(0.570, -0.809)
# doing the data transformations:
darl.df <- darl.df %>%
# Apply the log10 transformations
mutate(across(.cols = c(tube_diam, keel_diam,
wing2_length,
hoodarea, wingarea,
tubearea), ~log10(.x))) %>%
# apply z-standardization
mutate(across(.cols = everything(), ~scale(.x)))
darl.MRPP$E.delta
set.seed(11)
darl.MRPP <- mrpp(vegdist(darl.df, method = "euclidean"),
darl.kclust$cluster,
permutations = 1000)
# data of delta values
darl_delta <- data.frame(delta = c(darl.MRPP$boot.deltas, darl.MRPP$delta),
i = c(rep(0, length(darl.MRPP$boot.deltas)), 1))
# plot the histogram
ggplot(data = darl_delta, aes(x = delta)) +
geom_histogram(bins = 50) +
# line to denot location of observed value
geom_vline(xintercept = darl.MRPP$delta, color = "red") +
theme_bw() +
ggtitle("Darlington data MRPP deltas") +
labs(caption = str_wrap(paste0(
"Histogram of deltas from permutation test, red line ",
"denotes observed value. P-value of: <0.001. Expected ",
"value for delta is: ",round(darl.MRPP$E.delta,3),".")))
View(vegdist(darl.df, method = "euclidean"))
vegdist(darl.df, method = "euclidean")[[1]] %>% View
vegdist(darl.df, method = "euclidean")[1] %>% View
vegdist(darl.df, method = "euclidean") %>% str
vegdist(darl.df, method = "euclidean")$di
vegdist(darl.df, method = "euclidean") %>% names
vegdist(darl.df, method = "euclidean") %>% View
vegdist(darl.df, method = "euclidean") %>% mean
darl.MRPP$E.delta
zz <-vegdist(darl.df, method = "euclidean")
zz %>% dim
zz %>% length
zz %>% as.matrix
nrow(darl.df)
seq( as.integer((nrow(darl.df) - 1) ):1 ) %>% sum
zz %>% length
seq( as.integer((nrow(darl.df))):1 -1) %>% sum
c(seq(as.integer((nrow(darl.df))):1)-1) %>% sum
(darl.MRPP$delta < darl.MRPP$boot.deltas)/length(darl.MRPP$boot.deltas)
sum(as.integer((darl.MRPP$delta < darl.MRPP$boot.deltas)))/length(darl.MRPP$boot.deltas)
sum(as.integer((darl.MRPP$delta ? darl.MRPP$boot.deltas)))/length(darl.MRPP$boot.deltas)
sum(as.integer((darl.MRPP$delta > darl.MRPP$boot.deltas)))/length(darl.MRPP$boot.deltas)
(sum(as.integer((darl.MRPP$delta > darl.MRPP$boot.deltas))) + 1)/length(darl.MRPP$boot.deltas)
darl.MRPP$Pvalue
(sum(as.integer((darl.MRPP$delta > darl.MRPP$boot.deltas))) + 1)/(length(darl.MRPP$boot.deltas)+1)
# Pitcher plant data
w <- getwd()
darl.df <- read.csv("Darlingtonia.csv", row.names = 1)
# dune data
dune.df <- read.csv("dune_data.csv", row.names = 1)
# read in the packages
invisible(lapply(c("cluster", "vegan", "pvclust", "tidyverse"),
require,
character.only = T))
# doing the data transformations:
darl.df <- darl.df %>%
# Apply the log10 transformations
mutate(across(.cols = c(tube_diam, keel_diam,
wing2_length,
hoodarea, wingarea,
tubearea), ~log10(.x))) %>%
# apply z-standardization
mutate(across(.cols = everything(), ~scale(.x)))
wss.v <- rep(0, ncol(darl.df))
# Loop through the number of potential columns
for (i in 1:length(wss.v)){ # sets the number of times the loop will be run i.e., the number of clusters in this case)
wss.v[i] <- sum(kmeans(darl.df, centers = i, nstart=25)$withinss) #
}
# Plotting for K means sum of squares
plot(x = 1:length(wss.v), y = wss.v,
xlab = "k", ylab = "WSS",
type = "b")
sil.v <- rep(0, ncol(darl.df))
for(i in 2:min(10, nrow(darl.df))){
sil.v[i] <- summary(
silhouette(
kmeans(darl.df, centers=i,
iter.max = 100, nstart = 25)$cluster, dist(darl.df)))$avg.width
}
# generate plot
plot(2:min(10, nrow(darl.df)),
sil.v[2:ncol(darl.df)],
type = "b", xlab = "K",
ylab = "Average silhouette width")
# Kmeans clustering with K = 2
K_clusters <- 2
darl.kclust <- kmeans(darl.df, K_clusters, iter.max = 25)
# run the PCA
darl.PCA <- princomp(darl.df, cor = T)
# loadings of the different variables to the PCs
loading.df <- data.frame(PC1 = darl.PCA$loadings[,1],
PC2 = darl.PCA$loadings[,2],
name = rownames(darl.PCA$loadings))
# the PCA data for the biplot (scores)
darl_PCA.df <- darl.PCA$scores %>%
as.data.frame(.) %>%
mutate(cluster = as.factor(darl.kclust$cluster),
start = 0,
id = rownames(darl.df),
col = if_else(cluster== 1, "orange", "navy"))
# rescale the axes
b <- seq(-60,80, by = 20)
b2 <- seq(-60,60, by = 20)
#
# bp <- biplot(darl.PCA)
# text(x = .1, y = -.2, labels = "X",col = "blue")
# text(x= darl.PCA$scores[,1], darl.PCA$scores[,2], labels=rownames(darl.df), cex=1, lwd=2, col = "green")
# create the biplot
ggplot() +
geom_text(data = darl_PCA.df, aes(x = Comp.1, y = Comp.2,
color = cluster, label = id)) +
geom_segment(data = loading.df, aes(x = 0, y = 0,
xend = PC1*10,
yend = PC2*10),
arrow = arrow(length = unit(0.2,"cm"))) +
# rescale the x axis for a secondary axis for the loadings
scale_x_continuous(limits = c(range(b)/10),
sec.axis =sec_axis(~ . * 10,
name = "PC1-loading",
breaks = b,
labels = as.character(b/100))) +
# rescale the x axis for a secondary axis for the loadings
scale_y_continuous(limits = c(range(b2)/10),
sec.axis =sec_axis(~ . * 10,
name = "PC2-loading",
breaks = b2,
labels = as.character(b2/100))) +
geom_text(data = loading.df,
mapping = aes(x = PC1*10, y = 10*PC2, label = name)) +
theme_bw()
# means for each group
darl.df %>%
cbind(., darl.kclust$cluster) %>%
as_tibble %>%
summarise(.by = `darl.kclust$cluster`,
avg_mouthd = mean(mouth_diam))
# pairs plot
pairs(darl.df[,c(1,2,8,9)],
panel = function(x,y,z) text(x,y, darl.kclust$cluster))
set.seed(11)
darl.MRPP <- mrpp(vegdist(darl.df, method = "euclidean"),
darl.kclust$cluster,
permutations = 1000)
# data of delta values
darl_delta <- data.frame(delta = c(darl.MRPP$boot.deltas, darl.MRPP$delta),
i = c(rep(0, length(darl.MRPP$boot.deltas)), 1))
# plot the histogram
ggplot(data = darl_delta, aes(x = delta)) +
geom_histogram(bins = 50) +
# line to denot location of observed value
geom_vline(xintercept = darl.MRPP$delta, color = "red") +
theme_bw() +
ggtitle("Darlington data MRPP deltas") +
labs(caption = str_wrap(paste0(
"Histogram of deltas from permutation test, red line ",
"denotes observed value. P-value of: <0.001. Expected ",
"value for delta is: ", round(darl.MRPP$E.delta, 3),".")))
darl_ANOSIM <- anosim(vegdist(darl.df, method = "euclidean"),
darl.kclust$cluster, permutations = 1000)
darl_R <- data.frame(R = c(darl_ANOSIM$perm, darl_ANOSIM$statistic),
i = c(rep(0, length(darl_ANOSIM$perm)), 1))
# plot the histogram
ggplot(data = darl_R, aes(x = R)) +
geom_histogram(bins = 50) +
# line to denot location of observed value
geom_vline(xintercept = darl_ANOSIM$statistic, color = "red") +
theme_bw() +
ggtitle("Darlington data permutation r") +
labs(caption = str_wrap(paste0(
"Histogram of R-statistic from permutation test, red line ",
"denotes observed value. P-value of: <0.001")))
darl_ANOSIM$statistic
darl_ANOSIM <- anosim(vegdist(darl.df, method = "euclidean"),
darl.kclust$cluster, permutations = 1000)
darl_R <- data.frame(R = c(darl_ANOSIM$perm, darl_ANOSIM$statistic),
i = c(rep(0, length(darl_ANOSIM$perm)), 1))
# plot the histogram
ggplot(data = darl_R, aes(x = R)) +
geom_histogram(bins = 50) +
# line to denot location of observed value
geom_vline(xintercept = darl_ANOSIM$statistic, color = "red") +
theme_bw() +
ggtitle("Darlington data permutation r") +
labs(caption = str_wrap(paste0(
"Histogram of R-statistic from permutation test, red line ",
"denotes observed value. P-value of: <0.001. Calculated R statistic of: ",
round(darl_ANOSIM$statistic, 3)," (shown in red).")))
darl_ANOSIM$signif
# Pitcher plant data
w <- getwd()
darl.df <- read.csv("Darlingtonia.csv", row.names = 1)
# dune data
dune.df <- read.csv("dune_data.csv", row.names = 1)
# read in the packages
invisible(lapply(c("cluster", "vegan", "pvclust", "tidyverse"),
require,
character.only = T))
# doing the data transformations:
darl.df <- darl.df %>%
# Apply the log10 transformations
mutate(across(.cols = c(tube_diam, keel_diam,
wing2_length,
hoodarea, wingarea,
tubearea), ~log10(.x))) %>%
# apply z-standardization
mutate(across(.cols = everything(), ~scale(.x)))
wss.v <- rep(0, ncol(darl.df))
# Loop through the number of potential columns
for (i in 1:length(wss.v)){ # sets the number of times the loop will be run i.e., the number of clusters in this case)
wss.v[i] <- sum(kmeans(darl.df, centers = i, nstart=25)$withinss) #
}
# Plotting for K means sum of squares
plot(x = 1:length(wss.v), y = wss.v,
xlab = "k", ylab = "WSS",
type = "b")
sil.v <- rep(0, ncol(darl.df))
for(i in 2:min(10, nrow(darl.df))){
sil.v[i] <- summary(
silhouette(
kmeans(darl.df, centers=i,
iter.max = 100, nstart = 25)$cluster, dist(darl.df)))$avg.width
}
# generate plot
plot(2:min(10, nrow(darl.df)),
sil.v[2:ncol(darl.df)],
type = "b", xlab = "K",
ylab = "Average silhouette width")
# Kmeans clustering with K = 2
K_clusters <- 2
darl.kclust <- kmeans(darl.df, K_clusters, iter.max = 25)
# run the PCA
darl.PCA <- princomp(darl.df, cor = T)
# loadings of the different variables to the PCs
loading.df <- data.frame(PC1 = darl.PCA$loadings[,1],
PC2 = darl.PCA$loadings[,2],
name = rownames(darl.PCA$loadings))
# the PCA data for the biplot (scores)
darl_PCA.df <- darl.PCA$scores %>%
as.data.frame(.) %>%
mutate(cluster = as.factor(darl.kclust$cluster),
start = 0,
id = rownames(darl.df),
col = if_else(cluster== 1, "orange", "navy"))
# rescale the axes
b <- seq(-60,80, by = 20)
b2 <- seq(-60,60, by = 20)
#
# bp <- biplot(darl.PCA)
# text(x = .1, y = -.2, labels = "X",col = "blue")
# text(x= darl.PCA$scores[,1], darl.PCA$scores[,2], labels=rownames(darl.df), cex=1, lwd=2, col = "green")
# create the biplot
ggplot() +
geom_text(data = darl_PCA.df, aes(x = Comp.1, y = Comp.2,
color = cluster, label = id)) +
geom_segment(data = loading.df, aes(x = 0, y = 0,
xend = PC1*10,
yend = PC2*10),
arrow = arrow(length = unit(0.2,"cm"))) +
# rescale the x axis for a secondary axis for the loadings
scale_x_continuous(limits = c(range(b)/10),
sec.axis =sec_axis(~ . * 10,
name = "PC1-loading",
breaks = b,
labels = as.character(b/100))) +
# rescale the x axis for a secondary axis for the loadings
scale_y_continuous(limits = c(range(b2)/10),
sec.axis =sec_axis(~ . * 10,
name = "PC2-loading",
breaks = b2,
labels = as.character(b2/100))) +
geom_text(data = loading.df,
mapping = aes(x = PC1*10, y = 10*PC2, label = name)) +
theme_bw()
# means for each group
darl.df %>%
cbind(., darl.kclust$cluster) %>%
as_tibble %>%
summarise(.by = `darl.kclust$cluster`,
avg_mouthd = mean(mouth_diam))
# pairs plot
pairs(darl.df[,c(1,2,8,9)],
panel = function(x,y,z) text(x,y, darl.kclust$cluster))
set.seed(11)
darl.MRPP <- mrpp(vegdist(darl.df, method = "euclidean"),
darl.kclust$cluster,
permutations = 1000)
# data of delta values
darl_delta <- data.frame(delta = c(darl.MRPP$boot.deltas, darl.MRPP$delta),
i = c(rep(0, length(darl.MRPP$boot.deltas)), 1))
# plot the histogram
ggplot(data = darl_delta, aes(x = delta)) +
geom_histogram(bins = 50) +
# line to denot location of observed value
geom_vline(xintercept = darl.MRPP$delta, color = "red") +
theme_bw() +
ggtitle("Darlington data MRPP deltas") +
labs(caption = str_wrap(paste0(
"Histogram of deltas from permutation test, red line ",
"denotes observed value. P-value of: <0.001. Expected ",
"value for delta is: ", round(darl.MRPP$E.delta, 3),".")))
darl_ANOSIM <- anosim(vegdist(darl.df, method = "euclidean"),
darl.kclust$cluster, permutations = 1000)
darl_R <- data.frame(R = c(darl_ANOSIM$perm, darl_ANOSIM$statistic),
i = c(rep(0, length(darl_ANOSIM$perm)), 1))
# plot the histogram
ggplot(data = darl_R, aes(x = R)) +
geom_histogram(bins = 50) +
# line to denot location of observed value
geom_vline(xintercept = darl_ANOSIM$statistic, color = "red") +
theme_bw() +
ggtitle("Darlington data permutation r") +
labs(caption = str_wrap(paste0(
"Histogram of R-statistic from permutation test, red line ",
"denotes observed value. P-value of: <0.001. Calculated R statistic of: ",
round(darl_ANOSIM$statistic, 4)," (shown in red).")))
# dissimilarity matrix for the dune data
jdiss_dune.m <- vegdist(dune.df, method = "jaccard")
# methods of clustering to use
methods.v <- c("single", "complete", "average",
"centroid", "median", "ward.D2")
# list to store the results
hclust.L <- vector(mode = "list",
length = length(methods.v))
names(hclust.L) <- methods.v
# Location to store the cophenetic and aglomerativ coefficients
coef <- data.frame(row.names = methods.v,
coph_cor = rep(NA,length(methods.v)),
algo_coef = NA)
# fill in the different methods, skips ___ if contains negative branches
for(m in methods.v){
# clustering
hclust.L[[m]] <- hclust(d = jdiss_dune.m, method = m)
# cophenetic correlation
coef[m, "coph_cor"] <- cor(jdiss_dune.m, cophenetic(hclust.L[[m]]))
# algopmeratic Coefficient
if(!inherits(try(coef.hclust(hclust.L[[m]])), "try-error")){
coef[m, "algo_coef"] <- coef.hclust(hclust.L[[m]])
}
#plot(hclust.L[[m]])
}
plot(hclust.L$average)
print(coef)
set.seed(11)
darl.MRPP <- mrpp(vegdist(darl.df, method = "euclidean"),
darl.kclust$cluster,
permutations = 1000)
# data of delta values
darl_delta <- data.frame(delta = c(darl.MRPP$boot.deltas, darl.MRPP$delta),
i = c(rep(0, length(darl.MRPP$boot.deltas)), 1))
# plot the histogram
ggplot(data = darl_delta, aes(x = delta)) +
geom_histogram(bins = 50) +
# line to denot location of observed value
geom_vline(xintercept = darl.MRPP$delta, color = "red") +
theme_bw() +
ggtitle("Darlington data MRPP deltas") +
labs(caption = str_wrap(paste0(
"Histogram of deltas from permutation test, red line ",
"denotes observed value. P-value of: <0.001. Expected ",
"value for delta is: ", round(darl.MRPP$E.delta, 3),".")))
1 - darl.MRPP$delta/darl.MRPP$E.delta
set.seed(11)
darl.MRPP <- mrpp(vegdist(darl.df, method = "euclidean"),
darl.kclust$cluster,
permutations = 1000)
# data of delta values
darl_delta <- data.frame(delta = c(darl.MRPP$boot.deltas, darl.MRPP$delta),
i = c(rep(0, length(darl.MRPP$boot.deltas)), 1))
# plot the histogram
ggplot(data = darl_delta, aes(x = delta)) +
geom_histogram(bins = 50) +
# line to denot location of observed value
geom_vline(xintercept = darl.MRPP$delta, color = "red") +
theme_bw() +
ggtitle("Darlington data MRPP deltas") +
labs(caption = str_wrap(paste0(
"Histogram of deltas from permutation test, red line ",
"denotes observed value. P-value of: <0.001. Expected ",
"value for delta is: ", round(darl.MRPP$E.delta, 3),".")))
print(paste("A statistic of:",  round(1 - darl.MRPP$delta/darl.MRPP$E.delta),3))
1 - darl.MRPP$delta/darl.MRPP$E.delta
round(1 - darl.MRPP$delta/darl.MRPP$E.delta,3)
print(paste("A statistic of:",  round(1 - darl.MRPP$delta/darl.MRPP$E.delta,3)))
